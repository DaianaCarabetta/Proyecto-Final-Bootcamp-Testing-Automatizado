
name: CI â€“ Proyecto Final (API + Features)

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BROWSER: chrome
  HEADLESS: "true"
  TIMEOUT: "10"

jobs:
  setup:
    name: "ðŸ”§ Setup & Install"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env from secrets
        run: |
          cat > .env <<'EOF'
          BASE_URL=${{ secrets.BASE_URL }}
          UI_BASE_URL=${{ secrets.UI_BASE_URL }}
          API_TOKEN=${{ secrets.API_TOKEN }}
          API_USER=${{ secrets.API_USER }}
          API_PASS=${{ secrets.API_PASS }}
          EOF

      - name: Show tool versions
        run: |
          python --version
          pip --version

  api_tests:
    name: "ðŸ§ª API Tests (pytest)"
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Restore .env
        run: |
          cat > .env <<'EOF'
          BASE_URL=${{ secrets.BASE_URL }}
          UI_BASE_URL=${{ secrets.UI_BASE_URL }}
          API_TOKEN=${{ secrets.API_TOKEN }}
          API_USER=${{ secrets.API_USER }}
          API_PASS=${{ secrets.API_PASS }}
          EOF

      - name: Ensure folders
        run: mkdir -p reports

      - name: Run API tests (only api_tests/)
        run: |
          pytest -q api_tests             --html=reports/api.html --self-contained-html             --cov=api_tests --cov-report=term-missing --cov-report=html

      - name: Upload API artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-api
          path: |
            reports/**
            htmlcov/**

  bdd_tests:
    name: "ðŸ§© Features (behave)"
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run behave if config exists (only tests/features)
        run: |
          if [ -f "behave.ini" ] || [ -d "tests/features" ]; then
            mkdir -p reports
            behave -f pretty -f json -o reports/behave.json || true
          else
            echo "No behave.ini or features folder â€” skipping"
          fi

      - name: Upload BDD artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-bdd
          path: reports/behave.json
          if-no-files-found: ignore
